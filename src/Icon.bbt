REM >BASIC:Icon
REM
REM Copyright 2001-2014, Stephen Fryatt (info@stevefryatt.org.uk)
REM
REM This file is part of WimpLib:
REM
REM   http://www.stevefryatt.org.uk/software/
REM
REM Licensed under the EUPL, Version 1.1 only (the "Licence");
REM You may not use this work except in compliance with the
REM Licence.
REM
REM You may obtain a copy of the Licence at:
REM
REM   http://joinup.ec.europa.eu/software/page/eupl
REM
REM Unless required by applicable law or agreed to in
REM writing, software distributed under the Licence is
REM distributed on an "AS IS" basis, WITHOUT WARRANTIES
REM OR CONDITIONS OF ANY KIND, either express or implied.
REM
REM See the Licence for the specific language governing
REM permissions and limitations under the Licence.
REM
REM
REM Icon handling library
REM
REM The variable a% is reqired to point to 256 bytes of memory.

REM Get the address of an icon's indirected text buffer.
REM
REM \param window%		The handle of the window containing the icon.
REM \param icon%		The number of the icon of interest.
REM \return			Pointer to the buffer, or 0 if not indirected.
:
DEF FNicon_indirection(!a%, a%!4)
SYS "Wimp_GetIconState",,a%
IF (a%!24 AND &100) = 0 THEN =0
=a%!28


REM Get the address of an icon's validation string.
REM
REM \param window%		The handle of the window containing the icon.
REM \param icon%		The number of the icon of interest.
REM \return			Pointer to the string, or 0 if not indirected.
:
DEF FNicon_indirection(!a%, a%!4)
SYS "Wimp_GetIconState",,a%
IF (a%!24 AND &100) = 0 THEN =0
=a%!32


REM Set the selected state of an icon.
REM
REM \param window%		The handle of the window containing the icon.
REM \param icon%		The number of the icon to be updated.
REM \selected%			TRUE to select the icon; FALSE to deselect it.
:
DEF PROCicon_set_selected(!a%, a%!4, selected%)
LOCAL eor%, clear%

IF selected% THEN clear% += (1<<21) : eor% += (1<<21) ELSE clear% += (1<<21) : eor% += (0<<21)
a%!8 = eor%
a%!12 = clear%
SYS "Wimp_SetIconState",,a%
ENDPROC


REM Set the shaded state of an icon.
REM
REM \param window%		The handle of the window containing the icon.
REM \param icon%		The number of the icon to be updated.
REM \shaded%			TRUE to shade the icon; FALSE to unshade it.
:
DEF PROCicon_set_shaded(!a%, a%!4, shaded%)
LOCAL eor%, clear%

IF shaded% THEN clear% += (1<<22) : eor% += (1<<22) ELSE clear% += (1<<22) : eor% += (0<<22)
a%!8 = eor%
a%!12 = clear%
SYS "Wimp_SetIconState",,a%
ENDPROC


REM Set the deleted state of an icon.
REM
REM \param window%		The handle of the window containing the icon.
REM \param icon%		The number of the icon to be updated.
REM \deleted%			TRUE to delete the icon; FALSE to undelete it.
:
DEF PROCicon_set_deleted(!a%, a%!4, deleted%)
LOCAL eor%, clear%

IF deleted% THEN clear% += (1<<23) : eor% += (1<<23) ELSE clear% += (1<<23) : eor% += (0<<23)
a%!8 = eor%
a%!12 = clear%
SYS "Wimp_SetIconState",,a%
ENDPROC


REM Bump a numeric value in an icon by one in a given direction, between limits.
REM
REM \param window%		The handle of the window containing the icon.
REM \param icon%		The number of the icon to be updated.
REM \direction%			TRUE to increase the value; FALSE to decrease.
REM \param min%			The minimum range for the icon, inclusive.
REM \param max%			The maximum range for the icon, inclusive.
REM \param pad%			The length to which to pad the number with
REM				leading zeros, or 0 for none.
:
DEF PROCicon_bump_value(window%, icon%, direction%, min%, max%, pad%)
LOCAL val%, val$

val$ = $FNicon_indirection(window%, icon%)
val% = VAL(val$)

IF direction% THEN
	val% += 1
	IF val% <= max% THEN val$ = STR$(val%)
ELSE
	val% -= 1
	IF val% >= min% THEN val$ = STR$(val%)
ENDIF

IF pad% > 0 THEN val$ = RIGHT$(STRING$(pad%, "0") + val$, pad%)

$FNicon_indirection(window%, icon%) = val$

SYS "Wimp_GetCaretPosition",,a%
IF !a% = window% AND a%!4 = icon% THEN SYS "Wimp_SetCaretPosition", window%, icon%,,, -1, LEN(val$)
PROCicon_redraw(window%, icon%)
ENDPROC


REM Force an icon to be redrawn.
REM
REM \param window%		The handle of the window containing the icon.
REM \param icon%		The number of the icon to be redrawn.
:
DEF PROCicon_redraw(!a%, a%!4)
SYS "Wimp_GetIconState",,a%
SYS "Wimp_ForceRedraw", !a%, a%!8, a%!12, a%!16, a%!20
ENDPROC

